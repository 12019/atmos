
                  *****   ******  ***   **     ****      **** 
                 **   **    **    ** * * **  ********  ***
                 ** * **    **    **  *  **  ********      ***
                 **   **    **    **     **    ****      ****

            ** Free Operating System for Atmel-based Smart Cards ** 
                 XXX ISO-COMPLIANT

                 http://techpubs.spinlocksolutions.com/atmos/
                 Davor Ocelic, docelic@spinlocksolutions.com

Table of Contents:

1) Compiling Atmos for target chip and smart card
2) Loading files onto smart card using programmer hardware
3) Smart Card reader setup
4) Alternative build modes
5) Compiling programs for emulation on PC
6) Compiling CT-API driver emulating card in a terminal


Compiling:

 cd src
 editor config.h   (enable/disable build options)
 editor Makefile   (verify settings for $ARCH, $PROG and $PORT)
 editor eedata.S   (can change EEPROM data loaded on card, such as
                   serial number, RNG seed, keys or file permissions)
 make              (result files are are atmos.{bin,hex} and eedata.{bin,hex}.
                   Bin files are raw files, .hex files are in Intel hex
                   format. They're the same but hex is nicer to read. Hex
                   file can be loaded onto the card just as well as .bin,
                   provided that your programmer supports Intel hex input.)


Loading onto smartcard:

 The writing is done using 'avrdude' software, so make sure you have it
 installed. Also make sure you've edited Makefile and set PROG= to
 a proper value (see 'avrdude -c list' for a list of valid options).

 Files go to:
   atmos.hex or .bin  -> Flash
   eedata.hex or .bin -> internal EEPROM

 The Makefile already supports 2 targets for loading the files. (Targets
 consist of 2 commands each which can be called individually as well):

  make write  (= write-eeprom write-flash)
  make verify (= verify-eeprom verify-flash)


Installing smart card reader software:
(Replace libtowitoko with your appropriate terminal-specific library,
or install the excellent generic libccid):

 apt-get install libtowitoko2 libtowitoko-dev
 apt-get install pcscd

 After the above, your reader should blink or give other indication when
 inserting the card; also the syslog should get messages like this (unless
 they're disabled in your pcscd or syslog configuration):

  Jul 13 15:24:53 ubuntu2 pcscd:
    eventhandler.c:438:EHStatusHandlerThread()
      Card inserted into Towitoko Chipdrive USB 00 00

  Jul 13 15:24:53 ubuntu2 pcscd:
    eventhandler.c:449:EHStatusHandlerThread()
      Card ATR: ......
  
  Jul 13 15:24:48 ubuntu2 pcscd:
    eventhandler.c:365:EHStatusHandlerThread()
      Card Removed From Towitoko Chipdrive USB 00 00
  

Alternative build modes

ATMOS can be compiled in a few different modes:

 - for the Atmel AVR chip (standard Makefile)
 - as a binary running on your workstation (Makefile.emu)
 - as a CT-API driver implementing a virtual card and terminal (Makefile.ctapi)

To invoke builds for the last two types, you need to specify
'make -f MAKEFILE', and you need to pay attention to always clean the
build by invoking 'make -f MAKEFILE clean' before switching targets,
or you will mix binaries and get errors about wrong binary types etc.

(To ease the cleanup process, the default Makefile's clean action calls all
three cleans. Therefore, just 'make clean' will always do what you need.)

Let's take a look at each build type:


* Standard Makefile, AVR target:

 Install gcc-avr and avr-libc
 Install doxygen
 Compile with 'make'


* Emulation on a PC

 To ease debugging, you can compile the package for the usual
 desktop computer (no any smart card hardware necessary).

 First, obtain libdes library from

 Then, obtain keeper library from

 Then install texinfo

 Then compile scez
 Then run PATH="$PATH:/sbin" ldconfig -n /usr/local/lib
 Then run make install

 Add -I/tmp/scez-ng to cflags

 Result are atmos-emu, fstest, authtest, enctest

 First install SCEZ:
   Info: http://www.freshmeat.net/projects/scez


* CT-API driver emulating card in a terminal

 Add -I/tmp/scez-ng to cflags

 make -f Makefile.ctapi

------------------------------------------------------------------------

ATMOS is copyright 2008-2009 Davor Ocelic <docelic@spinlocksolutions.com>

ATMOS is based on 2003 SOSSE by Matthias Bruestle <m@mbsks.franken.de>:
  SOSSE is documented inside the source. Printable/browsable documentation
  is generated with doxygen. A "make" in the top level directory will
  also build the documentation. If you do not have doxygen installed and
  do not want to install it, you find the most important documentation in
  "src/main.h". You can also browse it online at:
  <http://www.mbsks.franken.de/sosse/>

